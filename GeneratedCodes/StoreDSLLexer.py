# Generated from D:/semester-7/Compiler/FinalProject/Grammar/StoreDSL.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,23,255,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
        3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,
        6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,
        11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,
        15,1,15,1,15,1,16,1,16,1,16,5,16,161,8,16,10,16,12,16,164,9,16,1,
        16,1,16,1,17,4,17,169,8,17,11,17,12,17,170,1,17,1,17,5,17,175,8,
        17,10,17,12,17,178,9,17,1,17,5,17,181,8,17,10,17,12,17,184,9,17,
        1,17,1,17,4,17,188,8,17,11,17,12,17,189,3,17,192,8,17,1,18,4,18,
        195,8,18,11,18,12,18,196,1,19,1,19,1,19,1,19,5,19,203,8,19,10,19,
        12,19,206,9,19,1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,22,3,22,216,
        8,22,1,23,1,23,1,23,1,23,5,23,222,8,23,10,23,12,23,225,9,23,1,23,
        1,23,1,23,1,23,1,23,5,23,232,8,23,10,23,12,23,235,9,23,1,23,1,23,
        3,23,239,8,23,1,24,4,24,242,8,24,11,24,12,24,243,1,24,1,24,1,25,
        1,25,1,25,1,25,3,25,252,8,25,1,25,1,25,3,162,223,233,0,26,1,1,3,
        2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,15,31,16,33,17,35,18,37,19,39,20,41,0,43,0,45,0,47,21,49,22,51,
        23,1,0,3,1,0,48,57,2,0,65,90,97,122,3,0,9,10,13,13,32,32,269,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,47,1,0,
        0,0,0,49,1,0,0,0,0,51,1,0,0,0,1,53,1,0,0,0,3,60,1,0,0,0,5,62,1,0,
        0,0,7,69,1,0,0,0,9,71,1,0,0,0,11,73,1,0,0,0,13,84,1,0,0,0,15,86,
        1,0,0,0,17,93,1,0,0,0,19,100,1,0,0,0,21,107,1,0,0,0,23,112,1,0,0,
        0,25,121,1,0,0,0,27,136,1,0,0,0,29,143,1,0,0,0,31,151,1,0,0,0,33,
        157,1,0,0,0,35,191,1,0,0,0,37,194,1,0,0,0,39,198,1,0,0,0,41,207,
        1,0,0,0,43,209,1,0,0,0,45,215,1,0,0,0,47,238,1,0,0,0,49,241,1,0,
        0,0,51,251,1,0,0,0,53,54,5,100,0,0,54,55,5,101,0,0,55,56,5,102,0,
        0,56,57,5,105,0,0,57,58,5,110,0,0,58,59,5,101,0,0,59,2,1,0,0,0,60,
        61,5,123,0,0,61,4,1,0,0,0,62,63,5,101,0,0,63,64,5,110,0,0,64,65,
        5,116,0,0,65,66,5,105,0,0,66,67,5,116,0,0,67,68,5,121,0,0,68,6,1,
        0,0,0,69,70,5,58,0,0,70,8,1,0,0,0,71,72,5,44,0,0,72,10,1,0,0,0,73,
        74,5,97,0,0,74,75,5,116,0,0,75,76,5,116,0,0,76,77,5,114,0,0,77,78,
        5,105,0,0,78,79,5,98,0,0,79,80,5,117,0,0,80,81,5,116,0,0,81,82,5,
        101,0,0,82,83,5,115,0,0,83,12,1,0,0,0,84,85,5,125,0,0,85,14,1,0,
        0,0,86,87,5,99,0,0,87,88,5,114,0,0,88,89,5,101,0,0,89,90,5,97,0,
        0,90,91,5,116,0,0,91,92,5,101,0,0,92,16,1,0,0,0,93,94,5,100,0,0,
        94,95,5,101,0,0,95,96,5,108,0,0,96,97,5,101,0,0,97,98,5,116,0,0,
        98,99,5,101,0,0,99,18,1,0,0,0,100,101,5,117,0,0,101,102,5,112,0,
        0,102,103,5,100,0,0,103,104,5,97,0,0,104,105,5,116,0,0,105,106,5,
        101,0,0,106,20,1,0,0,0,107,108,5,108,0,0,108,109,5,105,0,0,109,110,
        5,115,0,0,110,111,5,116,0,0,111,22,1,0,0,0,112,113,5,100,0,0,113,
        114,5,105,0,0,114,115,5,115,0,0,115,116,5,99,0,0,116,117,5,111,0,
        0,117,118,5,117,0,0,118,119,5,110,0,0,119,120,5,116,0,0,120,24,1,
        0,0,0,121,122,5,100,0,0,122,123,5,105,0,0,123,124,5,115,0,0,124,
        125,5,99,0,0,125,126,5,111,0,0,126,127,5,117,0,0,127,128,5,110,0,
        0,128,129,5,116,0,0,129,130,5,95,0,0,130,131,5,118,0,0,131,132,5,
        97,0,0,132,133,5,108,0,0,133,134,5,117,0,0,134,135,5,101,0,0,135,
        26,1,0,0,0,136,137,5,83,0,0,137,138,5,116,0,0,138,139,5,114,0,0,
        139,140,5,105,0,0,140,141,5,110,0,0,141,142,5,103,0,0,142,28,1,0,
        0,0,143,144,5,73,0,0,144,145,5,110,0,0,145,146,5,116,0,0,146,147,
        5,101,0,0,147,148,5,103,0,0,148,149,5,101,0,0,149,150,5,114,0,0,
        150,30,1,0,0,0,151,152,5,70,0,0,152,153,5,108,0,0,153,154,5,111,
        0,0,154,155,5,97,0,0,155,156,5,116,0,0,156,32,1,0,0,0,157,162,5,
        34,0,0,158,161,3,45,22,0,159,161,9,0,0,0,160,158,1,0,0,0,160,159,
        1,0,0,0,161,164,1,0,0,0,162,163,1,0,0,0,162,160,1,0,0,0,163,165,
        1,0,0,0,164,162,1,0,0,0,165,166,5,34,0,0,166,34,1,0,0,0,167,169,
        3,41,20,0,168,167,1,0,0,0,169,170,1,0,0,0,170,168,1,0,0,0,170,171,
        1,0,0,0,171,172,1,0,0,0,172,176,5,46,0,0,173,175,3,41,20,0,174,173,
        1,0,0,0,175,178,1,0,0,0,176,174,1,0,0,0,176,177,1,0,0,0,177,192,
        1,0,0,0,178,176,1,0,0,0,179,181,3,41,20,0,180,179,1,0,0,0,181,184,
        1,0,0,0,182,180,1,0,0,0,182,183,1,0,0,0,183,185,1,0,0,0,184,182,
        1,0,0,0,185,187,5,46,0,0,186,188,3,41,20,0,187,186,1,0,0,0,188,189,
        1,0,0,0,189,187,1,0,0,0,189,190,1,0,0,0,190,192,1,0,0,0,191,168,
        1,0,0,0,191,182,1,0,0,0,192,36,1,0,0,0,193,195,3,41,20,0,194,193,
        1,0,0,0,195,196,1,0,0,0,196,194,1,0,0,0,196,197,1,0,0,0,197,38,1,
        0,0,0,198,204,3,43,21,0,199,203,3,43,21,0,200,203,3,41,20,0,201,
        203,5,95,0,0,202,199,1,0,0,0,202,200,1,0,0,0,202,201,1,0,0,0,203,
        206,1,0,0,0,204,202,1,0,0,0,204,205,1,0,0,0,205,40,1,0,0,0,206,204,
        1,0,0,0,207,208,7,0,0,0,208,42,1,0,0,0,209,210,7,1,0,0,210,44,1,
        0,0,0,211,212,5,92,0,0,212,216,5,34,0,0,213,214,5,92,0,0,214,216,
        5,92,0,0,215,211,1,0,0,0,215,213,1,0,0,0,216,46,1,0,0,0,217,218,
        5,47,0,0,218,219,5,47,0,0,219,223,1,0,0,0,220,222,9,0,0,0,221,220,
        1,0,0,0,222,225,1,0,0,0,223,224,1,0,0,0,223,221,1,0,0,0,224,226,
        1,0,0,0,225,223,1,0,0,0,226,239,5,10,0,0,227,228,5,47,0,0,228,229,
        5,42,0,0,229,233,1,0,0,0,230,232,9,0,0,0,231,230,1,0,0,0,232,235,
        1,0,0,0,233,234,1,0,0,0,233,231,1,0,0,0,234,236,1,0,0,0,235,233,
        1,0,0,0,236,237,5,42,0,0,237,239,5,47,0,0,238,217,1,0,0,0,238,227,
        1,0,0,0,239,48,1,0,0,0,240,242,7,2,0,0,241,240,1,0,0,0,242,243,1,
        0,0,0,243,241,1,0,0,0,243,244,1,0,0,0,244,245,1,0,0,0,245,246,6,
        24,0,0,246,50,1,0,0,0,247,252,5,10,0,0,248,249,5,13,0,0,249,252,
        5,10,0,0,250,252,5,13,0,0,251,247,1,0,0,0,251,248,1,0,0,0,251,250,
        1,0,0,0,252,253,1,0,0,0,253,254,6,25,0,0,254,52,1,0,0,0,17,0,160,
        162,170,176,182,189,191,196,202,204,215,223,233,238,243,251,1,6,
        0,0
    ]

class StoreDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    STRING = 17
    FLOAT = 18
    INT = 19
    ID = 20
    COMMENT = 21
    WS = 22
    NEWLINE = 23

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'define'", "'{'", "'entity'", "':'", "','", "'attributes'", 
            "'}'", "'create'", "'delete'", "'update'", "'list'", "'discount'", 
            "'discount_value'", "'String'", "'Integer'", "'Float'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "FLOAT", "INT", "ID", "COMMENT", "WS", "NEWLINE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "STRING", "FLOAT", "INT", "ID", "DIGIT", 
                  "LETTER", "ESC", "COMMENT", "WS", "NEWLINE" ]

    grammarFileName = "StoreDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


